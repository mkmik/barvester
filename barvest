#!/bin/bash

#BASE=http://oai.driver.research-infrastructures.eu/
#BASE=http://node1.integration.driver.research-infrastructures.eu:8280/is/mvc/oai/oai.do
BASE=http://zaguan.unizar.es/oai2d
#BASE=http://rua.ua.es/dspace-oai/request
MDFORMAT=oai_dc
SET=
DELAY=8
VERBOSE=0

###############################

listRecordsCommand() {
 TOKEN=$1
 if [ -z "$TOKEN" ]; then
	 echo "$BASE?verb=ListRecords&metadataPrefix=$MDFORMAT"
 else
	 echo "$BASE?verb=ListRecords&resumptionToken=$TOKEN"
 fi
}

parseResumptionToken() {
  grep '<resumptionToken' | sed 's/.*<resumptionToken[^>]*>\([^<]*\).*>/\1/'
}

COUNT=0

download() {
  PARAMS=$1
  ERR=1

  FILE=/tmp/barvest.tmp.$COUNT

  if [ "$VERBOSE" == "1" ]; then
	  echo  >&2 "wget -q -O- $1"
  fi
  while true; do
	  wget -q -t 1 -O$FILE $PARAMS
	  ERR=$?

	  cat $FILE >>/tmp/barvest.dump
	  if [ "$ERR" == "0" ]; then
		  break
	  fi

	  echo >&2 "got error from wget, retrying"
	  sleep 5
  done
  cat $FILE
}

TOKEN=""
while true; do
	echo "fetching token: $TOKEN"
	TOKEN=$(download $(listRecordsCommand $TOKEN) | parseResumptionToken)
	if [ -z "$TOKEN" ]; then
		echo "no more pages"
		break
	fi
	COUNT=$((COUNT + 1))

	echo "sleeping $DELAY"
	sleep $DELAY
done
echo "done"
echo "Fetched $COUNT pages"
